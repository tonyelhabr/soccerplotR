[{"path":"https://tonyelhabr.github.io/soccerplotR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 soccerplotR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tony ElHabr. Author, maintainer.","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"ElHabr T (2024). soccerplotR: Soccer Logo Plots 'ggplot2'. R package version 0.0.1,  https://tonyelhabr.github.io/soccerplotR/, https://github.com/tonyelhabr/soccerplotR.","code":"@Manual{,   title = {soccerplotR: Soccer Logo Plots in 'ggplot2'},   author = {Tony ElHabr},   year = {2024},   note = {R package version 0.0.1,  https://tonyelhabr.github.io/soccerplotR/},   url = {https://github.com/tonyelhabr/soccerplotR}, }"},{"path":"https://tonyelhabr.github.io/soccerplotR/index.html","id":"soccerplotr-","dir":"","previous_headings":"","what":"soccerplotR • Plot NBA Team Logos","title":"soccerplotR • Plot NBA Team Logos","text":"goal soccerplotR provide functions geoms help visualization professional soccer analysis. provides ggplot2 geom heavy lifting plotting soccer team logos high quality, correct aspect ratio possible transparency. done powerful ggpath package.","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"soccerplotR • Plot NBA Team Logos","text":"get bug fix use feature development version, can install development version soccerplotR GitHub :","code":"if (!require(\"pak\")) install.packages(\"pak\") pak::pak(\"tonyelhabr/soccerplotR\")"},{"path":"https://tonyelhabr.github.io/soccerplotR/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"soccerplotR • Plot NBA Team Logos","text":"","code":"library(soccerplotR) library(ggplot2)  FONT <- 'Kanit' sysfonts::font_add_google(FONT) showtext::showtext_auto() showtext::showtext_opts(dpi = 300)  team_names <- unlist(unname(soccerplotR::all_valid_team_names())) set.seed(42) sampled_team_names <- sample(team_names, size = 45)  df <- data.frame(   a = rep(1:5, 9),   b = sort(rep(0:8, 5), decreasing = TRUE),   team_name = sampled_team_names )  ggplot(df) +   aes(     x = a,      y = b   ) +   geom_soccer_logos(     aes(       team_name = team_name     ),      width = 0.075   ) +   geom_label(     aes(       label = team_name,       fill = team_name     ),     color = 'white',     family = FONT,     size = 10 / .pt,     nudge_y = -0.5   ) +   scale_fill_soccer(type = 'primary') +   theme_void() +   theme(     plot.margin = margin(25, 25, 25, 25, 'pt')   ) +   coord_cartesian(clip = 'off') +   labs(     title = 'A random sample of 45 teams'   ) +   theme(     plot.title.position = 'plot',     plot.title = element_text(family = FONT, size = 18, hjust = 0.5, vjust = 1)   )"},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/clean_team_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize Soccer Team Names — clean_team_names","title":"Standardize Soccer Team Names — clean_team_names","text":"function standardizes soccer team names Fotmob defaults.","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/clean_team_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize Soccer Team Names — clean_team_names","text":"","code":"clean_team_names(team_name, keep_non_matches = TRUE)"},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/clean_team_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize Soccer Team Names — clean_team_names","text":"team_name character vector team names keep_non_matches TRUE (default) element team_name matched internal mapping vectors kept . Otherwise replaced NA.","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/clean_team_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize Soccer Team Names — clean_team_names","text":"character vector length team_name cleaned team names included team_name_mapping, etc. Non matches may replaced NA (depending value keep_non_matches).","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/clean_team_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize Soccer Team Names — clean_team_names","text":"","code":"# \\donttest{ team_names <- c('Bournemouth', 'AFC Bournemouth', 'Bournemouth AFC')  # keep non matches soccerplotR::clean_team_names(team_names) #>       Bournemouth   AFC Bournemouth              <NA>  #>     \"Bournemouth\"     \"Bournemouth\" \"Bournemouth AFC\"   # drop \"bad\" names soccerplotR::clean_team_names(team_names, keep_non_matches = FALSE) #>     Bournemouth AFC Bournemouth            <NA>  #>   \"Bournemouth\"   \"Bournemouth\"              NA   # silence warnings # options(soccerplotR.verbose = FALSE) soccerplotR::clean_team_names(team_names) #>       Bournemouth   AFC Bournemouth              <NA>  #>     \"Bournemouth\"     \"Bournemouth\" \"Bournemouth AFC\"  # }"},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/geom_soccer_logos.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 Layer for Visualizing Soccer Team Logos — geom_soccer_logos","title":"ggplot2 Layer for Visualizing Soccer Team Logos — geom_soccer_logos","text":"geom used plot soccer team logos instead points ggplot. requires x, y aesthetics well valid team abbreviation. latter can checked all_valid_team_names() valid_team_names().","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/geom_soccer_logos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 Layer for Visualizing Soccer Team Logos — geom_soccer_logos","text":"","code":"geom_soccer_logos(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = FALSE,   inherit.aes = TRUE )"},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/geom_soccer_logos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 Layer for Visualizing Soccer Team Logos — geom_soccer_logos","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, either ggproto Geom subclass string naming stat stripped stat_ prefix (e.g. \"count\" rather \"stat_count\") position Position adjustment, either string naming adjustment (e.g. \"jitter\" use position_jitter), result call position adjustment function. Use latter need change settings adjustment. ... arguments passed ggplot2::layer(). often aesthetics, used set aesthetic fixed value. See section 'Aesthetics' full list possible arguments. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/geom_soccer_logos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 Layer for Visualizing Soccer Team Logos — geom_soccer_logos","text":"ggplot2 layer (ggplot2::layer()) can added plot created ggplot2::ggplot().","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/geom_soccer_logos.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"ggplot2 Layer for Visualizing Soccer Team Logos — geom_soccer_logos","text":"geom_soccer_logos() understands following aesthetics (required aesthetics bold): x - x-coordinate. y - y-coordinate. team_name - team abbreviation. one team_name_mapping. function tries clean team names internally calling clean_team_names(). alpha = NULL - alpha channel, .e. transparency level, numerical value 0 1. colour = NULL - image colorized colour. Use special character 'b/w' set black white. information valid colour names ggplot2 see https://ggplot2.tidyverse.org/articles/ggplot2-specs.html?q=colour#colour--fill angle = 0 - angle image numerical value 0° 360°. hjust = 0.5 - horizontal adjustment relative given x coordinate. Must numerical value 0 1. vjust = 0.5 - vertical adjustment relative given y coordinate. Must numerical value 0 1. width = 1.0 - desired width image npc (Normalised Parent Coordinates). default value set 1.0 big necessary used values computed relative default. typical size width = 0.075 (see examples). height = 1.0 - desired height image npc (Normalised Parent Coordinates). default value set 1.0 big necessary used values computed relative default. typical size height = 0.1 (see examples).","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/geom_soccer_logos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 Layer for Visualizing Soccer Team Logos — geom_soccer_logos","text":"","code":"# \\donttest{ library(soccerplotR) library(ggplot2)  team_names <- soccerplotR::valid_team_names(\"ENG\")  df <- data.frame(   a = c(rep(1:6, 7), c(1, 2)),   b = sort(c(rep(1:7, 6), c(8, 8)), decreasing = TRUE),   team_name = team_names )  # keep alpha == 1 for all teams including an 'A' matches <- grepl('A', df$team_name) df$alpha <- ifelse(matches, 1, 0.2) # also set a custom fill colour for the non 'A' teams df$colour <- ifelse(matches, NA, 'gray')  # scatterplot of all logos ggplot(df, aes(x = a, y = b)) +   geom_soccer_logos(aes(team_name = team_name), width = 0.075) +   geom_label(aes(label = team_name), nudge_y = -0.35, alpha = 0.5) +   theme_void()   # apply alpha via an aesthetic from inside the dataset `df` # please note that you have to add scale_alpha_identity() to use the alpha # values in your dataset! ggplot(df, aes(x = a, y = b)) +   geom_soccer_logos(aes(team_name = team_name, alpha = alpha), width = 0.075) +   geom_label(aes(label = team_name), nudge_y = -0.35, alpha = 0.5) +   scale_alpha_identity() +   theme_void()   # apply alpha and colour via an aesthetic from inside the dataset `df` # please note that you have to add scale_alpha_identity() as well as # scale_color_identity() to use the alpha and colour values in your dataset! ggplot(df, aes(x = a, y = b)) +   geom_soccer_logos(aes(team_name = team_name, alpha = alpha, colour = colour), width = 0.075) +   geom_label(aes(label = team_name), nudge_y = -0.35, alpha = 0.5) +   scale_alpha_identity() +   scale_color_identity() +   theme_void()   # apply alpha as constant for all logos ggplot(df, aes(x = a, y = b)) +   geom_soccer_logos(aes(team_name = team_name), width = 0.075, alpha = 0.6) +   geom_label(aes(label = team_name), nudge_y = -0.35, alpha = 0.5) +   theme_void()   # }"},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/scale_soccer.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales for Soccer Team Colors — scale_soccer","title":"Scales for Soccer Team Colors — scale_soccer","text":"functions map soccer team names team colors color fill aesthetics","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/scale_soccer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales for Soccer Team Colors — scale_soccer","text":"","code":"scale_color_soccer(   type = c(\"primary\", \"secondary\"),   values = NULL,   ...,   aesthetics = \"colour\",   breaks = ggplot2::waiver(),   na.value = \"grey50\",   guide = NULL,   alpha = NA )  scale_colour_soccer(   type = c(\"primary\", \"secondary\"),   values = NULL,   ...,   aesthetics = \"colour\",   breaks = ggplot2::waiver(),   na.value = \"grey50\",   guide = NULL,   alpha = NA )  scale_fill_soccer(   type = c(\"primary\", \"secondary\"),   values = NULL,   ...,   aesthetics = \"fill\",   breaks = ggplot2::waiver(),   na.value = \"grey50\",   guide = NULL,   alpha = NA )"},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/scale_soccer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales for Soccer Team Colors — scale_soccer","text":"type One \"primary\" \"secondary\" decide color type use. values NULL (default) use internal team color vectors. Otherwise set aesthetic values map data values . values matched order (usually alphabetical) limits scale, breaks provided. named vector, values matched based names instead. Data values match given na.value. ... Arguments passed discrete_scale palette palette function called single integer argument (number levels scale) returns values take (e.g., scales::hue_pal()). limits One : NULL use default scale values character vector defines possible values scale order function accepts existing (automatic) values returns new ones. Also accepts rlang lambda function notation. drop unused factor levels omitted scale? default, TRUE, uses levels appear data; FALSE uses levels factor. na.translate Unlike continuous scales, discrete scales can easily show missing values, default. want remove missing values discrete scale, specify na.translate = FALSE. scale_name name scale used error messages associated scale. name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. labels One : NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) expression vector (must length breaks). See ?plotmath details. function takes breaks input returns labels output. Also accepts rlang lambda function notation. guide function used create guide name. See guides() information. super super class use constructed scale aesthetics Character string vector character strings listing name(s) aesthetic(s) scale works . can useful, example, apply colour settings colour fill aesthetics time, via aesthetics = c(\"colour\", \"fill\"). breaks One : NULL breaks waiver() default breaks (scale limits) character vector breaks function takes limits input returns breaks output na.value aesthetic value use missing (NA) values guide function used create guide name. NULL (default) guide plotted scale. See ggplot2::guides() information. alpha Factor modify color transparency via call scales::alpha(). NA (default) transparency applied. Can also vector alphas. alpha levels must range [0,1].","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/scale_soccer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales for Soccer Team Colors — scale_soccer","text":"","code":"# \\donttest{ library(soccerplotR) library(ggplot2)  team_names <- soccerplotR::valid_team_names(\"ENG\")  df <- data.frame(   random_value = runif(length(team_names), 0, 1),   team_name = team_names ) ggplot(df, aes(x = team_name, y = random_value)) +   geom_col(aes(color = team_name, fill = team_name), width = 0.5) +   scale_color_soccer(type = \"secondary\") +   scale_fill_soccer(alpha = 0.4) +   theme(axis.text.x = element_text(angle = 45, hjust = 1))  # }"},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/soccerplotR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"soccerplotR: Soccer Logo Plots in 'ggplot2' — GeomSoccerlogo","title":"soccerplotR: Soccer Logo Plots in 'ggplot2' — GeomSoccerlogo","text":"set functions visualize professional soccer analysis 'ggplot2'.","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/soccerplotR-package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"soccerplotR: Soccer Logo Plots in 'ggplot2' — GeomSoccerlogo","text":"","code":"GeomSoccerlogo"},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/soccerplotR-package.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"soccerplotR: Soccer Logo Plots in 'ggplot2' — GeomSoccerlogo","text":"object class GeomSoccerlogo (inherits Geom, ggproto, gg) length 5.","code":""},{"path":[]},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/soccerplotR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"soccerplotR: Soccer Logo Plots in 'ggplot2' — GeomSoccerlogo","text":"Maintainer: Tony ElHabr mrcaseb@gmail.com","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/team_name_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternate Team Abbreviation Mapping — team_name_mapping","title":"Alternate Team Abbreviation Mapping — team_name_mapping","text":"list named character vectors mapping common alternate team abbreviations.","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/team_name_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternate Team Abbreviation Mapping — team_name_mapping","text":"","code":"team_name_mapping"},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/team_name_mapping.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alternate Team Abbreviation Mapping — team_name_mapping","text":"list named character vectors, element list array teams corresponding given country (3-letter ISO code). character vector following form: name attribute \"alternate\" name. value attribute \"correct\" name.","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/team_name_mapping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternate Team Abbreviation Mapping — team_name_mapping","text":"can suggest additions table opening issue soccerplotR.","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/team_name_mapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternate Team Abbreviation Mapping — team_name_mapping","text":"","code":"# \\donttest{ library(purrr)  available_countries <- names(soccerplotR::team_name_mapping) available_countries #> [1] \"ENG\" \"ESP\" \"FRA\" \"GER\" \"ITA\" \"USA\" #> [1] \"ENG\" \"ESP\" \"FRA\" \"GER\" \"ITA\" \"USA\"  eng_teams <- soccerplotR::team_name_mapping[[\"ENG\"]] eng_teams[c(\"Wolves\", \"Wolverhampton Wanderers\", \"WBA\", \"West Brom\")] #>                  Wolves Wolverhampton Wanderers                     WBA  #>                \"Wolves\"                \"Wolves\"             \"West Brom\"  #>               West Brom  #>             \"West Brom\"   all_teams <- flatten_chr(soccerplotR::team_name_mapping) all_teams[c(\"Tottenham Hotspur\", \"Tottenham\", \"AC Milan\")] #>        <NA>   Tottenham    AC Milan  #>          NA \"Tottenham\"  \"AC Milan\"  # }"},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/valid_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Output Valid Soccer Team Names — valid_names","title":"Output Valid Soccer Team Names — valid_names","text":"Team names used function extracted Fotmob","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/valid_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output Valid Soccer Team Names — valid_names","text":"","code":"valid_team_names(country)  all_valid_team_names()"},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/valid_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output Valid Soccer Team Names — valid_names","text":"country One \"ENG\", \"ESP\", \"FRA\", \"GER\", \"ITA\", \"USA\". (Names ISO 3166 3-letter country codes.)","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/valid_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output Valid Soccer Team Names — valid_names","text":"vector type 'character'.","code":""},{"path":"https://tonyelhabr.github.io/soccerplotR/reference/valid_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Output Valid Soccer Team Names — valid_names","text":"","code":"all_valid_team_names() #> $ENG #>  [1] \"Arsenal\"        \"Aston Villa\"    \"Birmingham\"     \"Blackburn\"      #>  [5] \"Bournemouth\"    \"Brentford\"      \"Brighton\"       \"Bristol City\"   #>  [9] \"Burnley\"        \"Cardiff\"        \"Chelsea\"        \"Coventry\"       #> [13] \"Crystal Palace\" \"Everton\"        \"Fulham\"         \"Huddersfield\"   #> [17] \"Hull\"           \"Ipswich\"        \"Leeds\"          \"Leicester\"      #> [21] \"Liverpool\"      \"Luton\"          \"Man City\"       \"Man United\"     #> [25] \"Middlesbrough\"  \"Millwall\"       \"Newcastle\"      \"Norwich\"        #> [29] \"Nottm Forest\"   \"Plymouth\"       \"Preston\"        \"QPR\"            #> [33] \"Rotherham\"      \"Sheff Utd\"      \"Sheff Wed\"      \"Southampton\"    #> [37] \"Stoke\"          \"Sunderland\"     \"Swansea\"        \"Tottenham\"      #> [41] \"Watford\"        \"West Brom\"      \"West Ham\"       \"Wolves\"         #>  #> $ESP #>  [1] \"Albacete\"         \"Alcorcon\"         \"Almeria\"          \"Athletic Club\"    #>  [5] \"Atletico Madrid\"  \"Barcelona\"        \"Burgos CF\"        \"CD Mirandes\"      #>  [9] \"Cadiz\"            \"Cartagena\"        \"Celta Vigo\"       \"Deportivo Alaves\" #> [13] \"Eibar\"            \"Elche\"            \"Eldense\"          \"Espanyol\"         #> [17] \"FC Andorra\"       \"Getafe\"           \"Girona\"           \"Granada\"          #> [21] \"Las Palmas\"       \"Leganes\"          \"Levante\"          \"Mallorca\"         #> [25] \"Osasuna\"          \"Racing Santander\" \"Racing de Ferrol\" \"Rayo Vallecano\"   #> [29] \"Real Betis\"       \"Real Madrid\"      \"Real Oviedo\"      \"Real Sociedad\"    #> [33] \"Real Valladolid\"  \"Real Zaragoza\"    \"SD Amorebieta\"    \"SD Huesca\"        #> [37] \"Sevilla\"          \"Sporting Gijon\"   \"Tenerife\"         \"Valencia\"         #> [41] \"Villarreal\"       \"Villarreal B\"     #>  #> $FRA #>  [1] \"AC Ajaccio\"    \"Amiens\"        \"Angers\"        \"Annecy FC\"     #>  [5] \"Auxerre\"       \"Bordeaux\"      \"Brest\"         \"Caen\"          #>  [9] \"Clermont Foot\" \"Concarneau\"    \"Dunkerque\"     \"Grenoble\"      #> [13] \"Guingamp\"      \"Laval\"         \"Le Havre\"      \"Lens\"          #> [17] \"Lille\"         \"Lorient\"       \"Lyon\"          \"Marseille\"     #> [21] \"Metz\"          \"Monaco\"        \"Montpellier\"   \"Nantes\"        #> [25] \"Nice\"          \"PSG\"           \"Paris FC\"      \"Pau\"           #> [29] \"Quevilly\"      \"Reims\"         \"Rennes\"        \"Rodez\"         #> [33] \"SC Bastia\"     \"Saint-Etienne\" \"Strasbourg\"    \"Toulouse\"      #> [37] \"Troyes\"        \"Valenciennes\"  #>  #> $GER #>  [1] \"1.FC Kaiserslautern\"    \"1.FC Magdeburg\"         \"1.FC Nurnberg\"          #>  [4] \"Augsburg\"               \"Bayern Munchen\"         \"Dortmund\"               #>  [7] \"Dusseldorf\"             \"Eintracht Braunschweig\" \"Elversberg\"             #> [10] \"FC Heidenheim\"          \"Frankfurt\"              \"Freiburg\"               #> [13] \"Greuther Furth\"         \"Hamburger SV\"           \"Hannover 96\"            #> [16] \"Hansa Rostock\"          \"Hertha Berlin\"          \"Hoffenheim\"             #> [19] \"Holstein Kiel\"          \"Karlsruher SC\"          \"Koln\"                   #> [22] \"Leverkusen\"             \"M'gladbach\"             \"Mainz\"                  #> [25] \"Paderborn\"              \"RB Leipzig\"             \"SV Darmstadt\"           #> [28] \"Schalke 04\"             \"St. Pauli\"              \"Union Berlin\"           #> [31] \"VfB Stuttgart\"          \"VfL Bochum\"             \"VfL Osnabruck\"          #> [34] \"Wehen Wiesbaden\"        \"Werder Bremen\"          \"Wolfsburg\"              #>  #> $ITA #>  [1] \"AC Milan\"      \"Ascoli\"        \"Atalanta\"      \"Bari\"          #>  [5] \"Bologna\"       \"Brescia\"       \"Cagliari\"      \"Catanzaro\"     #>  [9] \"Cittadella\"    \"Como\"          \"Cosenza\"       \"Cremonese\"     #> [13] \"Empoli\"        \"FeralpiSalo\"   \"Fiorentina\"    \"Frosinone\"     #> [17] \"Genoa\"         \"Hellas Verona\" \"Inter\"         \"Juventus\"      #> [21] \"Lazio\"         \"Lecce\"         \"Lecco\"         \"Modena\"        #> [25] \"Monza\"         \"Palermo\"       \"Parma\"         \"Pisa\"          #> [29] \"Reggiana\"      \"Roma\"          \"SSC Napoli\"    \"Salernitana\"   #> [33] \"Sampdoria\"     \"Sassuolo\"      \"Spezia\"        \"Sudtirol\"      #> [37] \"Ternana\"       \"Torino\"        \"Udinese\"       \"Venezia\"       #>  #> $USA #>  [1] \"Atlanta United\"                  \"Austin FC\"                       #>  [3] \"Birmingham Legion FC\"            \"Charleston Battery\"              #>  [5] \"Charlotte FC\"                    \"Chicago\"                         #>  [7] \"Cincinnati\"                      \"Colorado\"                        #>  [9] \"Colorado Springs Switchbacks FC\" \"Columbus\"                        #> [11] \"DC United\"                       \"Dallas\"                          #> [13] \"Detroit City FC\"                 \"El Paso Locomotive FC\"           #> [15] \"FC Tulsa\"                        \"Hartford Athletic\"               #> [17] \"Houston\"                         \"Indy Eleven\"                     #> [19] \"Inter Miami CF\"                  \"LA Galaxy\"                       #> [21] \"LAFC\"                            \"Las Vegas Lights FC\"             #> [23] \"Loudoun United FC\"               \"Louisville City FC\"              #> [25] \"Memphis 901 FC\"                  \"Miami FC\"                        #> [27] \"Minnesota\"                       \"Monterey Bay F.C.\"               #> [29] \"Montreal\"                        \"NY Red Bulls\"                    #> [31] \"NYCFC\"                           \"Nashville SC\"                    #> [33] \"New England\"                     \"New Mexico United\"               #> [35] \"Oakland Roots SC\"                \"Orange County SC\"                #> [37] \"Orlando\"                         \"Philadelphia\"                    #> [39] \"Phoenix Rising FC\"               \"Pittsburgh Riverhounds SC\"       #> [41] \"Portland\"                        \"Rio Grande Valley FC\"            #> [43] \"Sacramento Republic FC\"          \"Salt Lake\"                       #> [45] \"San Antonio FC\"                  \"San Diego Loyal SC\"              #> [47] \"San Jose\"                        \"Seattle Sounders\"                #> [49] \"Sporting KC\"                     \"St. Louis City\"                  #> [51] \"Tampa Bay Rowdies\"               \"Toronto\"                         #> [53] \"Vancouver\"                       #>  valid_team_names(\"ENG\") #>  [1] \"Arsenal\"        \"Aston Villa\"    \"Birmingham\"     \"Blackburn\"      #>  [5] \"Bournemouth\"    \"Brentford\"      \"Brighton\"       \"Bristol City\"   #>  [9] \"Burnley\"        \"Cardiff\"        \"Chelsea\"        \"Coventry\"       #> [13] \"Crystal Palace\" \"Everton\"        \"Fulham\"         \"Huddersfield\"   #> [17] \"Hull\"           \"Ipswich\"        \"Leeds\"          \"Leicester\"      #> [21] \"Liverpool\"      \"Luton\"          \"Man City\"       \"Man United\"     #> [25] \"Middlesbrough\"  \"Millwall\"       \"Newcastle\"      \"Norwich\"        #> [29] \"Nottm Forest\"   \"Plymouth\"       \"Preston\"        \"QPR\"            #> [33] \"Rotherham\"      \"Sheff Utd\"      \"Sheff Wed\"      \"Southampton\"    #> [37] \"Stoke\"          \"Sunderland\"     \"Swansea\"        \"Tottenham\"      #> [41] \"Watford\"        \"West Brom\"      \"West Ham\"       \"Wolves\""},{"path":"https://tonyelhabr.github.io/soccerplotR/news/index.html","id":"soccerplotr-001","dir":"Changelog","previous_headings":"","what":"soccerplotR 0.0.1","title":"soccerplotR 0.0.1","text":"Initial version package, based heavily {nbaplotR} 0.0.4","code":""}]
